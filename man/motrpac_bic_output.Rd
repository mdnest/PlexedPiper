% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/motrpac_bic_funtions.R
\name{motrpac_bic_output}
\alias{motrpac_bic_output}
\alias{make_rii_peptide_gl}
\alias{make_results_ratio_gl}
\alias{make_rii_peptide_ph}
\alias{make_results_ratio_ph}
\alias{map_flanking_sequence}
\alias{assess_redundant_protein_matches}
\alias{assess_noninferable_proteins}
\alias{compute_protein_coverage}
\title{Format Tables for BIC}
\usage{
make_rii_peptide_gl(
  msnid,
  masic_data,
  fractions,
  samples,
  references,
  org_name = "Rattus norvegicus"
)

make_results_ratio_gl(
  msnid,
  masic_data,
  fractions,
  samples,
  references,
  org_name = "Rattus norvegicus"
)

make_rii_peptide_ph(
  msnid,
  masic_data,
  fractions,
  samples,
  references,
  org_name = "Rattus norvegicus",
  sep = "_"
)

make_results_ratio_ph(
  msnid,
  masic_data,
  fractions,
  samples,
  references,
  org_name = "Rattus norvegicus",
  sep = "_"
)

map_flanking_sequence(msnid, fasta, radius = 7L, collapse = "|")

assess_redundant_protein_matches(msnid, collapse = "|")

assess_noninferable_proteins(msnid, collapse = "|")

compute_protein_coverage(msnid, fasta)
}
\arguments{
\item{msnid}{(MSnID-object) final filtered version of MSnID object}

\item{masic_data}{(data.frame) final filtered version of MASIC table}

\item{fractions}{(data.frame) Study design table linking Dataset with PlexID}

\item{samples}{(data.frame) Study design table linking sample names with TMT channels and PlexID}

\item{references}{(data.frame) Study design table describing reference value calculation}

\item{org_name}{(character) Organism name. Default is 'Rattus norvegicus'}

\item{sep}{(character) Single character used to concatenate protein, SiteID, and peptide}
}
\description{
Assembles data in format compliant with BIC requirements.

\itemize{
\item \code{make_rii_peptide_gl()}: returns 'RII_peptide.txt' table formatted for BIC (global)
\item \code{make_results_ratio_gl()}: returns 'results_ratio.txt' table (global)
\item \code{make_rii_peptide_ph()}: returns 'RII_peptide.txt' table (phospho)
\item \code{make_results_ratio_ph()}: returns 'results_ratio.txt' table (phospho)
\item \code{map_flanking_sequence()}: returns MSnID object with +/- 7 amino acids (by default) surrounding each PTM
\item \code{assess_redundant_proteins()}: appends proteins matched to multiple peptides
\item \code{assess_noninferable_proteins()}: appends proteins with identical peptide sets
\item \code{compute_protein_coverage()}: determines what percent of protein is covered by given peptides.
}
}
\examples{
# Prepare MS/MS IDs
path_to_MSGF_results <- system.file("extdata/global/msgf_output", package = "PlexedPiperTestData")
msnid <- read_msgf_data(path_to_MSGF_results)
msnid <- MSnID::correct_peak_selection(msnid)
show(msnid)
msnid <- filter_msgf_data_peptide_level(msnid, 0.01)
show(msnid)
path_to_FASTA <- system.file("extdata/Rattus_norvegicus_NCBI_RefSeq_2018-04-10.fasta.gz", package = "PlexedPiperTestData")
msnid <- compute_num_peptides_per_1000aa(msnid, path_to_FASTA)
msnid <- filter_msgf_data_protein_level(msnid, 0.01)
show(msnid)

# Prepare table with reporter ion intensities
path_to_MASIC_results <- system.file("extdata/global/masic_output", package = "PlexedPiperTestData")
masic_data <- read_masic_data(path_to_MASIC_results, extra_metrics=TRUE)
masic_data <- filter_masic_data(masic_data, 0.5, 0)

library(readr)
fractions <- read_tsv(system.file("extdata/study_design/fractions.txt", package = "PlexedPiperTestData"))
samples <- read_tsv(system.file("extdata/study_design/samples.txt", package = "PlexedPiperTestData"))
references <- read_tsv(system.file("extdata/study_design/references.txt", package = "PlexedPiperTestData"))

results_ratio <- make_results_ratio_gl(msnid, masic_data, fractions, samples, references, org_name = "Rattus norvegicus")
rii_peptide <- make_rii_peptide_gl(msnid, masic_data, fractions, samples, references, org_name = "Rattus norvegicus")
}
